{"version":3,"file":"static/js/827.459452ef.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx","styles/FormStyles.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useRef } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\nimport Button from 'components/Button';\nimport {\n  Box,\n  Container,\n  Check,\n  Form,\n  InputField,\n  Label,\n  ErrorMessage,\n} from 'styles/FormStyles';\n\nimport {\n  useAddContactMutation,\n  useEditContactMutation,\n  useFetchContactsQuery,\n} from 'services/contactsApi';\nimport { getErrorMessage } from 'utils';\n\nexport default function ContactForm(props) {\n  const {\n    contact: { id, name, number } = {},\n    editing = false,\n    closeModal,\n  } = props;\n\n  const { data = [] } = useFetchContactsQuery();\n  const [addContact] = useAddContactMutation();\n  const [editContact] = useEditContactMutation();\n\n  const toastId = useRef(null);\n\n  const phoneRegExp =\n    /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\n  const formik = useFormik({\n    initialValues: {\n      name: name ?? '',\n      number: number ?? '',\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(4, 'Must be at least 4 characters long')\n        .required('Required'),\n      number: Yup.string()\n        .min(10, 'Must be at least 10 characters long')\n        .matches(phoneRegExp, 'Phone number is not valid')\n        .required('Required'),\n    }),\n    onSubmit(values, { resetForm }) {\n      const formattedName = values.name.toLowerCase();\n      const isNewContact = data.every(\n        contact => contact.name.toLowerCase() !== formattedName\n      );\n\n      if (!isNewContact && !editing) {\n        if (!toast.isActive(toastId.current)) {\n          toastId.current = toast.warn(\n            `${values.name} is already in your contacts.`\n          );\n        }\n        return;\n      }\n\n      if (editing) {\n        editContact({ id, ...values })\n          .unwrap()\n          .then(({ name }) => toast.success(`${name} has been edited`))\n          .catch(err => {\n            toast.error(getErrorMessage(err));\n          });\n      } else {\n        addContact({ ...values })\n          .unwrap()\n          .then(({ name }) =>\n            toast.success(`${name} has been added to your contacts`)\n          )\n          .catch(err => toast.error(getErrorMessage(err)));\n      }\n      resetForm();\n      closeModal();\n    },\n  });\n\n  return (\n    <Form\n      onSubmit={formik.handleSubmit}\n      boxShadowHidden\n      autoComplete=\"off\"\n      noValidate\n    >\n      <Label htmlFor=\"name\">Name</Label>\n      <Box>\n        <InputField\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={formik.values.name}\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n        />\n        {/* Error message */}\n        {formik.touched.name && formik.errors.name && (\n          <ErrorMessage>{formik.errors.name}</ErrorMessage>\n        )}\n        {/* Success */}\n        {formik.touched.name && !formik.errors.name && <Check />}\n      </Box>\n\n      <Label htmlFor=\"number\">Phone number</Label>\n      <Box>\n        <InputField\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={formik.values.number}\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n        />\n        {/* Error message */}\n        {formik.touched.number && formik.errors.number && (\n          <ErrorMessage>{formik.errors.number}</ErrorMessage>\n        )}\n        {/* Success */}\n        {formik.touched.number && !formik.errors.number && <Check />}\n      </Box>\n      {editing ? (\n        <Container>\n          <Button type=\"submit\">Save</Button>\n          <Button type=\"button\" onClick={closeModal}>\n            Cancel\n          </Button>\n        </Container>\n      ) : (\n        <Button type=\"submit\">Add contact</Button>\n      )}\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  contact: PropTypes.object,\n  editing: PropTypes.bool,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin: 0 auto 30px;\n  display: flex;\n  align-items: center;\n  gap: 24px;\n  max-width: 350px;\n\n  font-size: ${({ theme }) => `${theme.fontSize.textPrimary}`};\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const SearchField = styled.input`\n  padding: 15px 30px;\n\n  font-size: ${({ theme }) => `${theme.fontSize.textSecondary}`};\n  background-color: ${({ theme }) => `${theme.color.bgTertiary}`};\n  box-shadow: ${({ theme }) => `0 0 2px  ${theme.color.textTertiary}`};\n  border-radius: 16px;\n\n  &:focus {\n    box-shadow: ${({ theme }) => `0 0 2px  ${theme.color.bgAccent}`};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter';\nimport { filterSelectors } from 'redux/filter';\n\nimport { Label, SearchField } from './Filter.styled';\n\nexport default function Filter() {\n  const filter = useSelector(filterSelectors.selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <Label>\n      Search\n      <SearchField\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={filter}\n        placeholder=\"Contact name...\"\n        onChange={handleChange}\n      />\n    </Label>\n  );\n}\n","import styled, { keyframes } from 'styled-components';\n\nconst showComponent = keyframes`\n  0%{\n    transform: scale(0.2)\n  }\n  100%{\n    transform: scale(1)\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 1200;\n\n  padding: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.1);\n`;\n\nexport const ModalWindow = styled.div`\n  width: max-content;\n  height: max-content;\n\n  animation: ${showComponent} 500ms both;\n  overflow: hidden;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { Backdrop, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default function Modal({ closeModal, children }) {\n  useEffect(() => {\n    const handleClick = ({ target }) => {\n      const shouldCloseModal = target.classList.contains(\n        Backdrop.styledComponentId\n      );\n      shouldCloseModal && closeModal();\n    };\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('click', handleClick);\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('click', handleClick);\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  return createPortal(\n    <Backdrop>\n      <ModalWindow>{children}</ModalWindow>\n    </Backdrop>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: baseline;\n  gap: 20px;\n  padding: 10px 20px;\n\n  border: none;\n\n  &:not(:last-child) {\n    border-bottom: ${({ theme }) => `1px solid ${theme.color.bgSecondary}`};\n  }\n`;\n\nexport const Name = styled.span`\n  font-size: ${({ theme }) => theme.fontSize.textPrimary};\n  font-weight: 700;\n  line-height: calc(24 / 20);\n`;\n\nexport const Phone = styled.span`\n  font-size: ${({ theme }) => theme.fontSize.textSecondary};\n  font-weight: 500;\n`;\n\nexport const Box = styled.div`\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const EditBtn = styled.button`\n  padding: 5px;\n  display: inline-flex;\n\n  font-weight: 700;\n  text-transform: uppercase;\n  background-color: ${({ theme }) => theme.color.bgPrimary};\n  border-radius: 5px;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 5px;\n  display: inline-flex;\n\n  font-weight: 700;\n  text-transform: uppercase;\n  background-color: ${({ theme }) => theme.color.bgPrimary};\n  border-radius: 5px;\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => theme.color.bgError};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDeleteContactMutation } from 'services/contactsApi';\n\nimport Modal from 'components/Modal';\nimport ContactForm from 'components/ContactForm';\n\nimport { Item, Name, Phone, DeleteBtn, EditBtn, Box } from './Contact.styled';\nimport { BsTrash3Fill } from 'react-icons/bs';\nimport { BiEditAlt } from 'react-icons/bi';\nimport { toast } from 'react-toastify';\nimport { getErrorMessage } from 'utils';\n\nexport default function Contact({ id, name, number }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteContact] = useDeleteContactMutation();\n\n  const handleClick = () => {\n    deleteContact({ id, name })\n      .unwrap()\n      .then(({ name }) =>\n        toast.success(`${name} has been deleted from your contacts`)\n      )\n      .catch(err => toast.error(getErrorMessage(err)));\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Item>\n      <Name>{name}:</Name>\n      <Phone>{number}</Phone>\n      <Box>\n        <EditBtn type=\"button\" onClick={openModal}>\n          <BiEditAlt />\n        </EditBtn>\n        <DeleteBtn type=\"button\" onClick={handleClick}>\n          <BsTrash3Fill />\n        </DeleteBtn>\n      </Box>\n      {isModalOpen && (\n        <Modal closeModal={closeModal}>\n          <ContactForm\n            contact={{ id, name, number }}\n            closeModal={closeModal}\n            editing\n          />\n        </Modal>\n      )}\n    </Item>\n  );\n}\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  margin: 0 auto;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.color.bgPrimary};\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);\n  border-radius: 32px;\n  overflow: hidden;\n\n  @media screen and (min-width: 1200px) {\n    max-width: 75%;\n  }\n`;\n\nexport const Box = styled.div`\n  position: relative;\n`;\n\nexport const StyledList = styled.ul`\n  padding: 20px 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n\n  font-size: ${({ theme }) => theme.fontSize.textSecondary};\n`;\n","import { useSelector } from 'react-redux';\n\nimport Contact from 'components/Contact';\nimport ContentLoader from 'components/ContentLoader';\n\nimport { filterSelectors } from 'redux/filter';\n\nimport { StyledList, Wrapper, Box } from './ContactList.styled';\nimport { useFetchContactsQuery } from 'services/contactsApi';\n\nexport default function ContactList() {\n  const filter = useSelector(filterSelectors.selectFilter);\n  const { data = [], isFetching } = useFetchContactsQuery();\n\n  const formattedFilter = filter.toLowerCase();\n  const filteredContacts = data.filter(contact =>\n    contact.name.toLowerCase().includes(formattedFilter)\n  );\n\n  return (\n    <>\n      {filteredContacts.length > 0 ? (\n        <Wrapper>\n          <StyledList>\n            {filteredContacts.map(({ id, name, number }) => (\n              <Contact id={id} name={name} number={number} key={id} />\n            ))}\n          </StyledList>\n          {isFetching && <ContentLoader />}\n        </Wrapper>\n      ) : (\n        <Box>\n          {isFetching ? <ContentLoader /> : <p>There are no contacts :(</p>}\n        </Box>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n\n  background-color: ${({ theme }) => theme.color.bgSecondary};\n`;\n\nexport const Container = styled.div`\n  padding: 20px 50px;\n  margin: 0 auto;\n  max-width: 1200px;\n\n  font-size: ${({ theme }) => theme.fontSize.textPrimary};\n  background-color: ${({ theme }) => theme.color.bgSecondary};\n`;\n\nexport const Box = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n\n  font-size: ${({ theme }) => theme.fontSize.title};\n`;\n\nexport const Heading = styled.h2`\n  font-size: ${({ theme }) => theme.fontSize.headingPrimary};\n`;\n","import { useState } from 'react';\n\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Modal from 'components/Modal';\nimport Button from 'components/Button';\n\nimport { Heading, Box } from './Contacts.styled';\nimport { IoMdAddCircleOutline } from 'react-icons/io';\n\nexport default function Contacts() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Box>\n        <Heading>Contacts</Heading>\n        <Button onClick={openModal}>\n          <IoMdAddCircleOutline />\n          Add contact\n        </Button>\n      </Box>\n\n      <Filter />\n      <ContactList />\n      {isModalOpen && (\n        <Modal closeModal={closeModal}>\n          <ContactForm closeModal={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { BsCheckLg } from 'react-icons/bs';\n\nexport const Title = styled.h1`\n  margin-bottom: 24px;\n\n  font-size: ${({ theme }) => theme.fontSize.title};\n  letter-spacing: 0.05em;\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto 32px;\n  padding: 48px 64px;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 32px;\n  background-color: ${({ theme }) => theme.color.bgPrimary};\n\n  box-shadow: ${({ boxShadowHidden }) =>\n    boxShadowHidden ? '' : '0px 0px 20px rgba(0, 0, 0, 0.25);'};\n\n  @media screen and (min-width: 1200px) {\n    width: 500px;\n    max-width: 500px;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  width: 100%;\n\n  font-size: ${({ theme }) => `${theme.fontSize.textPrimary}`};\n  font-weight: 500;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n\n  margin-bottom: 32px;\n  width: 100%;\n\n  &:last-of-type {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nexport const InputField = styled.input`\n  padding: 0px 40px 10px 20px;\n  width: 100%;\n\n  font-size: ${({ theme }) => `${theme.fontSize.textSecondary}`};\n  line-height: 1.5;\n\n  border-bottom: ${({ theme }) => `2px solid ${theme.color.bgSecondary}`};\n  transition: ${({ theme }) =>\n    `all 250ms ${theme.transition.primaryCubicBezier}`};\n\n  &:focus {\n    border-color: ${({ theme }) => theme.color.bgAccent};\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  position: absolute;\n  top: 110%;\n  left: 0;\n\n  font-size: 12px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.color.bgError};\n`;\n\nexport const PasswordToggle = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 0;\n\n  padding: 4px;\n  display: flex;\n\n  background-color: transparent;\n  transform: translateY(-50%);\n`;\n\nexport const Check = styled(BsCheckLg)`\n  position: absolute;\n  top: 50%;\n  left: 102%;\n\n  color: ${({ theme }) => theme.color.bgSuccess};\n  transform: translateY(-50%);\n`;\n"],"names":["ContactForm","props","contact","id","name","number","editing","closeModal","useFetchContactsQuery","data","useAddContactMutation","addContact","useEditContactMutation","editContact","toastId","useRef","formik","useFormik","initialValues","validationSchema","Yup","min","required","matches","onSubmit","values","resetForm","formattedName","toLowerCase","every","unwrap","then","toast","catch","err","getErrorMessage","current","handleSubmit","boxShadowHidden","autoComplete","noValidate","htmlFor","type","title","value","onBlur","handleBlur","onChange","handleChange","touched","errors","pattern","Button","onClick","Label","styled","theme","fontSize","textPrimary","SearchField","textSecondary","color","bgTertiary","textTertiary","bgAccent","Filter","filter","useSelector","filterSelectors","dispatch","useDispatch","placeholder","target","setFilter","showComponent","keyframes","Backdrop","ModalWindow","modalRoot","document","getElementById","Modal","children","useEffect","handleClick","classList","contains","styledComponentId","handleKeyDown","evt","code","window","addEventListener","removeEventListener","createPortal","Item","bgSecondary","Name","Phone","Box","EditBtn","bgPrimary","DeleteBtn","bgError","Contact","useState","isModalOpen","setIsModalOpen","useDeleteContactMutation","deleteContact","Wrapper","StyledList","ContactList","isFetching","formattedFilter","filteredContacts","includes","length","map","ContentLoader","Heading","headingPrimary","Contacts","Title","Form","Container","InputField","transition","primaryCubicBezier","ErrorMessage","PasswordToggle","Check","BsCheckLg","bgSuccess"],"sourceRoot":""}