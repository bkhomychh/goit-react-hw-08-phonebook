{"version":3,"file":"static/js/578.81c6f88e.chunk.js","mappings":"iSAmBe,SAASA,IACtB,OAA8CC,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KAAaH,MAAM,yBAAyBI,SAAS,YAC5DH,SAAUE,EAAAA,KACPE,IAAI,EAAG,sCACPD,SAAS,cAEdE,SAAU,SAACC,EAAQC,GACjBb,EAASc,EAAAA,GAAAA,MAAqBF,GAC/B,IAOH,OACE,iCACE,SAAC,KAAD,qBACA,UAAC,KAAD,CAAMD,SAAUT,EAAOa,aAAcC,aAAa,MAAMC,YAAU,EAAlE,WACE,SAAC,KAAD,CAAOC,QAAQ,QAAf,oBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,MAAOpB,EAAOU,OAAOP,MACrBkB,OAAQrB,EAAOsB,WACfC,SAAUvB,EAAOwB,eAGlBxB,EAAOyB,QAAQtB,OAASH,EAAO0B,OAAOvB,QACrC,SAAC,KAAD,UAAeH,EAAO0B,OAAOvB,QAG9BH,EAAOyB,QAAQtB,QAAUH,EAAO0B,OAAOvB,QAAS,SAAC,KAAD,QAGnD,SAAC,KAAD,CAAOa,QAAQ,WAAf,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAG,WACHC,KAAMtB,EAAkB,OAAS,WACjCuB,KAAK,WACLC,MAAOpB,EAAOU,OAAON,SACrBiB,OAAQrB,EAAOsB,WACfC,SAAUvB,EAAOwB,gBAEnB,SAAC,KAAD,CAAgBN,KAAK,SAASS,QApCf,WACrB9B,GAAmB,SAAA+B,GAAK,OAAKA,CAAL,GACzB,EAkCO,SACGhC,GAAkB,SAAC,MAAD,KAAY,SAAC,MAAD,MAGhCI,EAAOyB,QAAQrB,UAAYJ,EAAO0B,OAAOtB,WACxC,SAAC,KAAD,UAAeJ,EAAO0B,OAAOtB,WAG9BJ,EAAOyB,QAAQrB,WAAaJ,EAAO0B,OAAOtB,WAAY,SAAC,KAAD,QAEzD,SAACyB,EAAA,EAAD,CAAQX,KAAK,SAAb,yBAIP,C,0SCrFYY,EAAQC,EAAAA,GAAAA,GAAH,uHAGH,qBAAGC,MAAkBC,SAASC,KAA9B,IAKFC,EAAOJ,EAAAA,GAAAA,KAAH,uUASK,qBAAGC,MAAkBI,MAAMC,SAA3B,IAEN,qBAAGC,gBACG,GAAK,mCADX,IASHC,EAAQR,EAAAA,GAAAA,MAAH,0GAIH,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,SAASO,YAAjC,IAIFC,EAAMV,EAAAA,GAAAA,IAAH,8IAWHW,EAAYX,EAAAA,GAAAA,IAAH,4FAMTY,EAAaZ,EAAAA,GAAAA,MAAH,2MAIR,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,SAASW,cAAjC,IAGI,gBAAGZ,EAAH,EAAGA,MAAH,0BAA4BA,EAAMI,MAAMS,YAAxC,IACH,gBAAGb,EAAH,EAAGA,MAAH,0BACCA,EAAMc,WAAWC,mBADlB,IAII,qBAAGf,MAAkBI,MAAMY,QAA3B,IAIPC,EAAelB,EAAAA,GAAAA,EAAH,mIAOd,qBAAGC,MAAkBI,MAAMc,OAA3B,IAGEC,EAAiBpB,EAAAA,GAAAA,OAAH,kLAYdqB,GAAQrB,EAAAA,EAAAA,IAAOsB,EAAAA,IAAPtB,CAAH,4HAKP,qBAAGC,MAAkBI,MAAMkB,SAA3B,G","sources":["pages/Login/Login.jsx","styles/FormStyles.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport Button from 'components/Button';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport {\n  Title,\n  Form,\n  Label,\n  Box,\n  InputField,\n  PasswordToggle,\n  ErrorMessage,\n  Check,\n} from 'styles/FormStyles';\n\nexport default function Login() {\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Required'),\n      password: Yup.string()\n        .min(7, 'Must be at least 7 characters long')\n        .required('Required'),\n    }),\n    onSubmit: (values, actions) => {\n      dispatch(authOperations.logIn(values));\n    },\n  });\n\n  const togglePassword = () => {\n    setIsPasswordShown(state => !state);\n  };\n\n  return (\n    <>\n      <Title>Login</Title>\n      <Form onSubmit={formik.handleSubmit} autoComplete=\"off\" noValidate>\n        <Label htmlFor=\"email\">Email</Label>\n        <Box>\n          <InputField\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={formik.values.email}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          {/* Error message */}\n          {formik.touched.email && formik.errors.email && (\n            <ErrorMessage>{formik.errors.email}</ErrorMessage>\n          )}\n          {/* Success */}\n          {formik.touched.email && !formik.errors.email && <Check />}\n        </Box>\n\n        <Label htmlFor=\"password\">Password</Label>\n        <Box>\n          <InputField\n            id=\"password\"\n            type={isPasswordShown ? 'text' : 'password'}\n            name=\"password\"\n            value={formik.values.password}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          <PasswordToggle type=\"button\" onClick={togglePassword}>\n            {isPasswordShown ? <BsEye /> : <BsEyeSlash />}\n          </PasswordToggle>\n          {/* Error message */}\n          {formik.touched.password && formik.errors.password && (\n            <ErrorMessage>{formik.errors.password}</ErrorMessage>\n          )}\n          {/* Success */}\n          {formik.touched.password && !formik.errors.password && <Check />}\n        </Box>\n        <Button type=\"submit\">Log in</Button>\n      </Form>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { BsCheckLg } from 'react-icons/bs';\n\nexport const Title = styled.h1`\n  margin-bottom: 24px;\n\n  font-size: ${({ theme }) => theme.fontSize.title};\n  letter-spacing: 0.05em;\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto 32px;\n  padding: 48px 64px;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 32px;\n  background-color: ${({ theme }) => theme.color.bgPrimary};\n\n  box-shadow: ${({ boxShadowHidden }) =>\n    boxShadowHidden ? '' : '0px 0px 20px rgba(0, 0, 0, 0.25);'};\n\n  @media screen and (min-width: 1200px) {\n    width: 500px;\n    max-width: 500px;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  width: 100%;\n\n  font-size: ${({ theme }) => `${theme.fontSize.textPrimary}`};\n  font-weight: 500;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n\n  margin-bottom: 32px;\n  width: 100%;\n\n  &:last-of-type {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nexport const InputField = styled.input`\n  padding: 0px 40px 10px 20px;\n  width: 100%;\n\n  font-size: ${({ theme }) => `${theme.fontSize.textSecondary}`};\n  line-height: 1.5;\n\n  border-bottom: ${({ theme }) => `2px solid ${theme.color.bgSecondary}`};\n  transition: ${({ theme }) =>\n    `all 250ms ${theme.transition.primaryCubicBezier}`};\n\n  &:focus {\n    border-color: ${({ theme }) => theme.color.bgAccent};\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  position: absolute;\n  top: 110%;\n  left: 0;\n\n  font-size: 12px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.color.bgError};\n`;\n\nexport const PasswordToggle = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 0;\n\n  padding: 4px;\n  display: flex;\n\n  background-color: transparent;\n  transform: translateY(-50%);\n`;\n\nexport const Check = styled(BsCheckLg)`\n  position: absolute;\n  top: 50%;\n  left: 102%;\n\n  color: ${({ theme }) => theme.color.bgSuccess};\n  transform: translateY(-50%);\n`;\n"],"names":["Login","useState","isPasswordShown","setIsPasswordShown","dispatch","useDispatch","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","actions","authOperations","handleSubmit","autoComplete","noValidate","htmlFor","id","type","name","value","onBlur","handleBlur","onChange","handleChange","touched","errors","onClick","state","Button","Title","styled","theme","fontSize","title","Form","color","bgPrimary","boxShadowHidden","Label","textPrimary","Box","Container","InputField","textSecondary","bgSecondary","transition","primaryCubicBezier","bgAccent","ErrorMessage","bgError","PasswordToggle","Check","BsCheckLg","bgSuccess"],"sourceRoot":""}